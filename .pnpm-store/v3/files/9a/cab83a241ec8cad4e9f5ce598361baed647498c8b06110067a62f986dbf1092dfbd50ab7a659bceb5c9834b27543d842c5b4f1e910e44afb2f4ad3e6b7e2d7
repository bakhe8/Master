/*!
 * Crafted with ❤ by Salla
 */
import { Host, h } from "@stencil/core";
import infoIcon from "../../assets/svg/info.svg";
import cartIcon from "../../assets/svg/cart.svg";
import imageIcon from "../../assets/svg/image.svg";
import moneyIcon from "../../assets/svg/money-card.svg";
import checkCircleIcon from "../../assets/svg/check-circle.svg";
export class SallaBottomAlert {
    constructor() {
        this.storeId = salla.config.get('store.id');
        this.template = salla.config.get('store.template');
        this.loading = false;
        this.templateData = {};
        this.defaultMessage = salla.lang.getWithDefault('common.elements.store_is_available_for_purchase', 'هذا المتجر متاح للشراء من');
        this.defaultActionLabel = salla.lang.get('common.elements.know_more');
        this.storeFeatures = salla.lang.get('common.elements.store_features');
        this.storeDetails = salla.lang.get('common.elements.store_details');
        this.storePrice = salla.lang.getWithDefault('common.elements.store_price', 'سعر المتجر');
        this.storePriceDetails = salla.lang.getWithDefault('common.elements.store_price_details', 'السعر يشمل');
        this.theDeveloper = salla.lang.get('common.elements.the_developer');
        this.templateInformation = salla.lang.get('common.elements.template_information');
        this.buyTheTemplate = salla.lang.get('common.elements.buy_the_template');
        this.isRtl = salla.config.get('theme.is_rtl', true);
        this.storeName = salla.config.get('store.name');
        this.salla = salla.lang.getWithDefault('common.elements.salla', 'سلة');
        /**
         * Alert Type
         * */
        this.type = 'popup';
        salla.lang.onLoaded(() => {
            this.defaultMessage = salla.lang.get('common.elements.experimental_and_available_store');
            this.defaultActionLabel = salla.lang.get('common.elements.know_more');
            this.storeFeatures = salla.lang.get('common.elements.store_features');
            this.storeDetails = salla.lang.get('common.elements.store_details');
            this.templateInformation = salla.lang.get('common.elements.template_information');
            this.buyTheTemplate = salla.lang.get('common.elements.buy_the_template');
            salla.helpers.setNested(salla.lang.messages['ar.trans'], 'common.elements.store_price', 'سعر المتجر');
            salla.helpers.setNested(salla.lang.messages['en.trans'], 'common.elements.store_price', 'Store Price');
            salla.helpers.setNested(salla.lang.messages['ar.trans'], 'common.elements.the_developer', 'المطور');
            salla.helpers.setNested(salla.lang.messages['en.trans'], 'common.elements.the_developer', 'the developer');
            salla.helpers.setNested(salla.lang.messages['ar.trans'], 'common.elements.store_price_details', 'السعر يشمل');
            salla.helpers.setNested(salla.lang.messages['en.trans'], 'common.elements.store_price_details', 'Price Includes');
            salla.helpers.setNested(salla.lang.messages['ar.trans'], 'common.elements.salla', 'سلة');
            salla.helpers.setNested(salla.lang.messages['en.trans'], 'common.elements.salla', 'Salla');
            salla.helpers.setNested(salla.lang.messages['ar.trans'], 'common.elements.store_is_available_for_purchase', 'هذا المتجر متاح للشراء من');
            salla.helpers.setNested(salla.lang.messages['en.trans'], 'common.elements.store_is_available_for_purchase', 'This store is available for purchase from');
            setTimeout(() => {
                this.storePrice = salla.lang.get('common.elements.store_price');
                this.theDeveloper = salla.lang.get('common.elements.the_developer');
                this.storePriceDetails = salla.lang.getWithDefault('common.elements.store_price_details', 'السعر يشمل');
                this.salla = salla.lang.getWithDefault('common.elements.salla', 'سلة');
                this.defaultMessage = salla.lang.getWithDefault('common.elements.store_is_available_for_purchase', 'هذا المتجر متاح للشراء من');
            }, 100);
        });
    }
    open() {
        return this.drawer.open()
            .then(() => this.handleTemplateRequest());
    }
    handleTemplateRequest() {
        if (Object.keys(this.templateData).length) {
            return;
        }
        this.drawer.loading();
        return salla.api.request(`/store/template`, {}, 'get', { 'Store-Identifier': this.storeId })
            .then((res) => {
            this.drawer.setTitle(this.storeDetails + " " + this.storeName);
            this.templateData = res.data;
            this.drawer.stopLoading();
        })
            .catch(() => {
            this.drawer.close();
        });
    }
    handleAction() {
        if (this.type === 'link') {
            window.location.href = this.actionUrl;
        }
        if (this.type === 'popup') {
            this.open();
        }
    }
    popup() {
        return (h("salla-drawer", { class: "s-bottom-alert-modal", ref: drawer => this.drawer = drawer, "no-padding": true }, Object.keys(this.templateData).length ?
            [h("div", { class: "s-bottom-alert-modal-inner s-scrollbar" }, h("div", { class: { "s-bottom-alert-modal-content": true } }, this.templateData?.features ? [h("div", { class: "s-bottom-alert-modal-content-title" }, h("i", { innerHTML: imageIcon, class: "s-bottom-alert-modal-content-icon" }), h("span", null, this.storeFeatures)), h("div", { class: "s-bottom-alert-modal-content-features", innerHTML: this.templateData?.features })
                ] : ''), h("div", { class: { "s-bottom-alert-modal-content": true, 's-bottom-alert-modal-content-extra-padding': this.templateData?.price } }, this.templateData?.features ? [h("div", { class: "s-bottom-alert-modal-content-title" }, h("i", { innerHTML: moneyIcon, class: "s-bottom-alert-modal-content-icon" }), h("span", null, this.storePriceDetails)), h("div", { class: "s-bottom-alert-modal-content-price-details" }, this.templateData?.price_details?.items.map((item) => (h("div", { class: "s-bottom-alert-modal-content-price-details-item" }, h("i", { innerHTML: checkCircleIcon, class: "s-bottom-alert-modal-content-price-details-item-icon" }), h("span", { class: "s-bottom-alert-modal-content-price-details-item-name" }, item.name), h("span", { class: "s-bottom-alert-modal-content-price-details-item-price", innerHTML: salla.money(item.price) })))))
                ] : ''), this.templateData?.link ?
                    h("div", { class: "s-bottom-alert-modal-content-footer" }, h("salla-button", { color: 'primary', size: "medium", width: 'wide', href: this.templateData?.link }, h("i", { innerHTML: cartIcon }), this.buyTheTemplate)) : '')] : ''));
    }
    render() {
        const hasTemplate = this.template && typeof this.template === 'object' && Object.keys(this.template).length > 0;
        // const developer = hasTemplate && this.template.developer;
        // const hasDeveloper = developer !== undefined;
        // const developerName = hasDeveloper && developer?.name;
        // const developerUrl = null;//hasDeveloper && developer.url;
        return (h(Host, { key: '39eb4b7f3c12ba74281ebcdd4b52cf04ec46054b', class: "s-bottom-alert-wrapper" }, h("div", { key: '94bdca640a4ae3434c9b6eaf2b3af8ffabfd5802', class: "s-bottom-alert-content" }, h("div", { key: 'cc218513a8d832155031cdf64f63c21bf01a0d1b', class: "s-bottom-alert-icon" }, this.icon ? h("i", { class: this.icon }) : h("i", { innerHTML: infoIcon })), h("div", { key: '97deba6e71c8507c68fb942940912e3e201dd65e', class: "s-bottom-alert-message" }, this.message ? (this.message) : hasTemplate ? (h("span", null, this.defaultMessage, " ", h("span", { class: {
                "s-bottom-alert-message-highlight": true,
            }, "aria-label": "Developer" }, this.salla), " ", h("span", { class: "s-bottom-alert-message-splitter" }, "|"), " ", this.storePrice, ":", " ", h("span", { class: "s-bottom-alert-message-highlight", innerHTML: salla.money(this.template.price) }))) : (this.defaultMessage)), this.type !== 'banner' && (h("div", { key: '7923680790c1db0ffeb716997b489dbb9b097125', class: "s-bottom-alert-action" }, h("salla-button", { key: 'f0d00ce883a1dec0a1640ad5f27b9eec3e645630', href: this.actionUrl, size: "medium", onClick: () => this.handleAction(), width: "normal" }, this.actionLabel || this.defaultActionLabel))), this.type === 'popup' && this.popup())));
    }
    static get is() { return "salla-bottom-alert"; }
    static get originalStyleUrls() {
        return {
            "$": ["salla-bottom-alert.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["salla-bottom-alert.css"]
        };
    }
    static get properties() {
        return {
            "type": {
                "type": "string",
                "attribute": "type",
                "mutable": false,
                "complexType": {
                    "original": "'link' | 'popup' | 'banner'",
                    "resolved": "\"banner\" | \"link\" | \"popup\"",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Alert Type"
                },
                "getter": false,
                "setter": false,
                "reflect": true,
                "defaultValue": "'popup'"
            },
            "icon": {
                "type": "string",
                "attribute": "icon",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Alert Icon class from salla icons library - ex: sicon-user"
                },
                "getter": false,
                "setter": false,
                "reflect": true
            },
            "message": {
                "type": "string",
                "attribute": "message",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Alert Message"
                },
                "getter": false,
                "setter": false,
                "reflect": true
            },
            "actionUrl": {
                "type": "string",
                "attribute": "action-url",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Button url - used when type is link"
                },
                "getter": false,
                "setter": false,
                "reflect": true
            },
            "actionLabel": {
                "type": "string",
                "attribute": "action-label",
                "mutable": false,
                "complexType": {
                    "original": "string",
                    "resolved": "string",
                    "references": {}
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Button label - used when type is link and popup"
                },
                "getter": false,
                "setter": false,
                "reflect": true
            }
        };
    }
    static get states() {
        return {
            "storeId": {},
            "template": {},
            "loading": {},
            "templateData": {},
            "defaultMessage": {},
            "defaultActionLabel": {},
            "storeFeatures": {},
            "storeDetails": {},
            "storePrice": {},
            "storePriceDetails": {},
            "theDeveloper": {},
            "templateInformation": {},
            "buyTheTemplate": {},
            "isRtl": {},
            "storeName": {},
            "salla": {}
        };
    }
    static get elementRef() { return "host"; }
}
