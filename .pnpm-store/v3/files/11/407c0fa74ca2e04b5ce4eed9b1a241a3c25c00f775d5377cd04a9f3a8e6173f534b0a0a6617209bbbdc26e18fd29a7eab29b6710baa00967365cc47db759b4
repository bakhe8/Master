/*!
 * Crafted with ❤ by Salla
 */
import { h, Host } from "@stencil/core";
import CheckIcon from "../../assets/svg/check.svg";
import Reply from "../../assets/svg/reply.svg";
import ThumbsUp from "../../assets/svg/thumbs-up.svg";
export class SallaCommentItem {
    constructor() {
        // Translations
        this.has_bought_trans = salla.lang.get('blocks.comments.has_bought');
        this.rated_trans = salla.lang.get('pages.rating.rated');
        this.waiting_approval_trans = salla.lang.get('blocks.comments.waiting_approval');
        this.has_order_trans = salla.lang.get('blocks.comments.has_order');
        this.allowLikes = salla.config.get('store.settings.rating.allow_likes');
        this.allowAttachImages = salla.config.get('store.settings.rating.allow_attach_images');
        this.helpfulLabel = salla.lang.getWithDefault('blocks.comments.helpful', 'مفيد');
        this.likesCount = 0;
        this.likedComments = [];
        salla.lang.onLoaded(() => {
            const setNestedAsync = (lang, key, value) => {
                return new Promise((resolve) => {
                    salla.helpers.setNested(salla.lang.messages[lang], key, value);
                    resolve(true);
                });
            };
            const setTranslations = async () => {
                await setNestedAsync('ar.trans', 'blocks.comments.helpful', 'مفيد');
                await setNestedAsync('en.trans', 'blocks.comments.helpful', 'Helpful');
                this.helpfulLabel = salla.lang.getWithDefault('blocks.comments.helpful', 'مفيد');
            };
            this.has_bought_trans = salla.lang.get('blocks.comments.has_bought');
            this.rated_trans = salla.lang.get('pages.rating.rated');
            this.waiting_approval_trans = salla.lang.get('blocks.comments.waiting_approval');
            this.has_order_trans = salla.lang.get('blocks.comments.has_order');
            setTranslations();
        });
    }
    componentDidLoad() {
        this.likesCount = this.comment.likes_count;
        try {
            this.likedComments = JSON.parse(localStorage.getItem('liked_comments') || '[]');
            if (this.likedComments.includes(this.comment.id)) {
                this.likeBtn.classList.add('liked');
                this.likeBtn.fill = "solid";
            }
        }
        catch {
            salla.log('Bad json for liked_comments');
        }
    }
    getReplies() {
        return Array.isArray(this.comment.replies) ? this.comment.replies : [this.comment.replies];
    }
    getDate(dateString) {
        const [datePart] = dateString.split(' ');
        const [year, month, day] = datePart.split('-');
        const formattedDate = `${parseInt(day, 10)}/${parseInt(month, 10)}/${parseInt(year, 10)}`;
        return formattedDate;
    }
    getTime(dateString) {
        const [, timePart] = dateString.split(' ');
        const [hours, minutes] = timePart.split(':');
        const formattedTime = `${parseInt(hours, 10)}:${parseInt(minutes, 10)}`;
        return formattedTime;
    }
    async toggleLike() {
        if (salla.config.isGuest()) {
            return salla.notify.error(salla.lang.get('common.messages.must_login'));
        }
        this.likedComments = JSON.parse(localStorage.getItem('liked_comments') || '[]');
        const isLiked = this.likedComments.includes(this.comment.id);
        try {
            const endpoint = isLiked ? `rating/${this.comment.id}/unlike` : `rating/${this.comment.id}/like`;
            const res = await salla.api.request(endpoint, '', 'put');
            salla.log(res.message);
            if (isLiked) {
                this.likeBtn.classList.remove('liked');
                this.likeBtn.fill = 'outline';
                this.updateLikedComments(this.comment.id, false);
                this.likesCount--;
            }
            else {
                this.likeBtn.classList.add('liked');
                this.likeBtn.fill = 'solid';
                this.updateLikedComments(this.comment.id, true);
                this.likesCount++;
            }
        }
        catch (e) {
            if (e.response.status == 409) {
                if (this.likeBtn.classList.contains('liked')) {
                    this.likeBtn.fill = 'outline';
                    this.likeBtn.classList.remove('liked');
                    this.updateLikedComments(this.comment.id, false);
                    this.likesCount--;
                }
                else {
                    this.likeBtn.fill = 'solid';
                    this.likeBtn.classList.add('liked');
                    salla.logger.warn('Like already exists');
                    this.updateLikedComments(this.comment.id, true);
                }
            }
        }
    }
    updateLikedComments(commentId, add) {
        this.likedComments = JSON.parse(localStorage.getItem('liked_comments') || '[]');
        if (add) {
            if (!this.likedComments.includes(commentId)) {
                this.likedComments.push(commentId);
            }
        }
        else {
            this.likedComments = this.likedComments.filter(id => id !== commentId);
        }
        localStorage.setItem('liked_comments', JSON.stringify(this.likedComments));
    }
    render() {
        let isAdmin = this.comment.type == 'admin';
        return (h(Host, { key: '98e314383c34c566ab9e05efeebae51e5b694681', class: isAdmin ? 's-comments-item-admin' : 's-comments-item' }, h("div", { key: 'a704f11fd7f4bc227eb2f986360afb3c2875c6ab', class: { "s-comments-item-wrapper": !isAdmin, "s-comments-item-admin-wrapper": isAdmin }, id: `s-comments-item-${this.comment.id}` }, h("div", { key: '8b0c0a9422003621eb5d8d6a54893fc0a18d4cc9', class: "s-comments-item-inner s-comments-flex-1" }, isAdmin && h("span", { key: '7f421290726abe2391da37178e01265badf4fd08', class: "s-comments-item-reply-icon", innerHTML: Reply }), h("div", { key: '61ef5759d54603f1b886de9126ab771437fe2e98', class: "s-comments-item-avatar" }, h("img", { key: '67b668cc17d3d0747cd128efa961540858750fbf', "data-src": this.comment?.avatar, alt: this.comment?.name, src: this.comment?.avatar, class: "s-comments-item-avatar-img lazy" })), h("div", { key: 'fc42c8a69538f09f8f3f9c0e5555d39b9dc4a6ac', class: "s-comments-flex-1" }, h("div", { key: '7b2b3de758fed9ae73e0032b6cf895ce1df99883', class: "s-comments-item-user-wrapper" }, h("div", { key: '1d4187d935e209354587a900f912a4eb19b066df', class: "s-comments-item-user-info" }, h("h3", { key: '2a45f7ad245c41a2fd5a69bd909e093effed8453', class: "s-comments-item-user-info-name" }, this.comment?.name), (this.comment.has_order || !!this.comment.rating) && !this.comment.is_pending && !this.hideBought ?
            h("div", { class: "s-comments-flex" }, this.comment.has_order ?
                [h("span", { class: "s-comments-item-has-order-check-icon", innerHTML: CheckIcon }), h("span", { class: "s-comments-item-has-order-check-text" }, this.has_bought_trans, " ", this.comment.rating ? ', ' : '')] : null, !!this.comment.rating ?
                h("span", { class: "s-comments-item-rated-widget" }, this.rated_trans) : null)
            : null), h("p", { key: 'c934abc4f8dd94bc349d85d00a5984aef672d9d9', class: "s-comments-item-timestamp s-ltr" }, " ", this.getDate(this.comment.created_at?.date), " ", h("span", { key: 'acef6d6af07b12501a61d074ad566692bb02456a', class: "s-comments-item-time" }, " - ", this.getTime(this.comment.created_at?.date), " ")), !!this.comment.rating || !!this.comment.stars ?
            h("salla-rating-stars", { size: "mini", class: "s-comments-item-stars", value: this.comment.rating || this.comment.stars })
            : null), h("div", { key: '9bedec8066878f113623e9ab27c203836eea2db5', class: "s-comments-item-content" }, h("p", { key: '0f8b1bf62ac5afc1449b160884945003b70e55f0', innerHTML: this.comment.content }), this.allowAttachImages && h("div", { key: 'df920f8e2758aedc313b4502f554157fb216c15d', class: "s-comments-item-images" }, this.comment.images.map((image, index) => (h("img", { key: index, src: image, alt: "", onClick: () => this.modal.open() }))), h("salla-modal", { key: '0743d9159e0cf4061b1969953f58fdebf49ee9e2', ref: modal => this.modal = modal, width: "sm" }, h("salla-slider", { key: '00a15b0dca213ddf64f3346da6849ce0dde7f638', id: `s-comments-item-${this.comment.id}-images`, class: "s-comments-item-images-slider", type: "thumbs", "auto-height": true, showControls: this.comment.images.length > 1 ? true : false, "show-thumbs-controls": "false" }, h("div", { key: '21e593664598eab16e56990c43aba10dcc526752', slot: 'items' }, this.comment.images.map((image, index) => (h("img", { key: index, src: image, alt: "" })))), h("div", { key: '8998e861f37fc30c488d60b016c68db0b09483ee', slot: "thumbs" }, this.comment.images.map((image, index) => (h("div", { class: "s-comments-item-images-slider-thumb" }, h("img", { key: index, src: image, alt: "" })))))))), this.allowLikes && !isAdmin && salla.url.is_page('product.single') ? h("salla-button", { ref: el => this.likeBtn = el, class: `s-comments-item-like-btn ${this.likedComments.includes(this.comment.id) ? 'liked' : ''}`, loaderPosition: 'center', fill: 'outline', size: 'small', onClick: () => this.toggleLike() }, h("span", null, this.helpfulLabel, " ", this.likesCount > 0 ? `(${this.likesCount})` : ''), h("span", { innerHTML: ThumbsUp })) : '', this.comment.is_pending ?
            h("span", { class: "s-comments-item-pending-text" }, this.waiting_approval_trans) : null))), !!this.getReplies().length && !isAdmin ?
            this.getReplies().map((reply) => {
                return h("div", null, h("salla-comment-item", { comment: reply }));
            }) : null)));
    }
    static get is() { return "salla-comment-item"; }
    static get originalStyleUrls() {
        return {
            "$": ["salla-comments.scss"]
        };
    }
    static get styleUrls() {
        return {
            "$": ["salla-comments.css"]
        };
    }
    static get properties() {
        return {
            "comment": {
                "type": "unknown",
                "attribute": "comment",
                "mutable": false,
                "complexType": {
                    "original": "Comment",
                    "resolved": "Comment",
                    "references": {
                        "Comment": {
                            "location": "import",
                            "path": "./interfaces",
                            "id": "src/components/salla-comments/interfaces.ts::Comment"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Single Comment Instance"
                },
                "getter": false,
                "setter": false
            },
            "hideBought": {
                "type": "unknown",
                "attribute": "hide-bought",
                "mutable": false,
                "complexType": {
                    "original": "Boolean",
                    "resolved": "Boolean",
                    "references": {
                        "Boolean": {
                            "location": "global",
                            "id": "global::Boolean"
                        }
                    }
                },
                "required": false,
                "optional": false,
                "docs": {
                    "tags": [],
                    "text": "Hide Bought"
                },
                "getter": false,
                "setter": false
            }
        };
    }
    static get states() {
        return {
            "has_bought_trans": {},
            "rated_trans": {},
            "waiting_approval_trans": {},
            "has_order_trans": {},
            "allowLikes": {},
            "allowAttachImages": {},
            "helpfulLabel": {},
            "likesCount": {},
            "likedComments": {}
        };
    }
    static get elementRef() { return "host"; }
}
